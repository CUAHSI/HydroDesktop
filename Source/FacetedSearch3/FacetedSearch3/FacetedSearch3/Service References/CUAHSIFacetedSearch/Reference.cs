//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FacetedSearch3.CUAHSIFacetedSearch {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OntologyElement", Namespace="http://schemas.datacontract.org/2004/07/MultiFacetedHIS")]
    [System.SerializableAttribute()]
    public partial class OntologyElement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLeafField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSearchableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuerystructuretblField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SynonymField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cConceptIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cConceptNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string itsJoinPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double longitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string myJoinPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mySearchPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int seriesCatalogDistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int tblJoinsToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tblNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLeaf {
            get {
                return this.IsLeafField;
            }
            set {
                if ((this.IsLeafField.Equals(value) != true)) {
                    this.IsLeafField = value;
                    this.RaisePropertyChanged("IsLeaf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRoot {
            get {
                return this.IsRootField;
            }
            set {
                if ((this.IsRootField.Equals(value) != true)) {
                    this.IsRootField = value;
                    this.RaisePropertyChanged("IsRoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSearchable {
            get {
                return this.IsSearchableField;
            }
            set {
                if ((this.IsSearchableField.Equals(value) != true)) {
                    this.IsSearchableField = value;
                    this.RaisePropertyChanged("IsSearchable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Layer {
            get {
                return this.LayerField;
            }
            set {
                if ((this.LayerField.Equals(value) != true)) {
                    this.LayerField = value;
                    this.RaisePropertyChanged("Layer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Querystructuretbl {
            get {
                return this.QuerystructuretblField;
            }
            set {
                if ((this.QuerystructuretblField.Equals(value) != true)) {
                    this.QuerystructuretblField = value;
                    this.RaisePropertyChanged("Querystructuretbl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Synonym {
            get {
                return this.SynonymField;
            }
            set {
                if ((object.ReferenceEquals(this.SynonymField, value) != true)) {
                    this.SynonymField = value;
                    this.RaisePropertyChanged("Synonym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cConceptID {
            get {
                return this.cConceptIDField;
            }
            set {
                if ((this.cConceptIDField.Equals(value) != true)) {
                    this.cConceptIDField = value;
                    this.RaisePropertyChanged("cConceptID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cConceptName {
            get {
                return this.cConceptNameField;
            }
            set {
                if ((object.ReferenceEquals(this.cConceptNameField, value) != true)) {
                    this.cConceptNameField = value;
                    this.RaisePropertyChanged("cConceptName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cParentID {
            get {
                return this.cParentIDField;
            }
            set {
                if ((this.cParentIDField.Equals(value) != true)) {
                    this.cParentIDField = value;
                    this.RaisePropertyChanged("cParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string itsJoinProperty {
            get {
                return this.itsJoinPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.itsJoinPropertyField, value) != true)) {
                    this.itsJoinPropertyField = value;
                    this.RaisePropertyChanged("itsJoinProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string myJoinProperty {
            get {
                return this.myJoinPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.myJoinPropertyField, value) != true)) {
                    this.myJoinPropertyField = value;
                    this.RaisePropertyChanged("myJoinProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mySearchProperty {
            get {
                return this.mySearchPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.mySearchPropertyField, value) != true)) {
                    this.mySearchPropertyField = value;
                    this.RaisePropertyChanged("mySearchProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int seriesCatalogDistance {
            get {
                return this.seriesCatalogDistanceField;
            }
            set {
                if ((this.seriesCatalogDistanceField.Equals(value) != true)) {
                    this.seriesCatalogDistanceField = value;
                    this.RaisePropertyChanged("seriesCatalogDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int tblJoinsTo {
            get {
                return this.tblJoinsToField;
            }
            set {
                if ((this.tblJoinsToField.Equals(value) != true)) {
                    this.tblJoinsToField = value;
                    this.RaisePropertyChanged("tblJoinsTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tblName {
            get {
                return this.tblNameField;
            }
            set {
                if ((object.ReferenceEquals(this.tblNameField, value) != true)) {
                    this.tblNameField = value;
                    this.RaisePropertyChanged("tblName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OntologyEnvelope", Namespace="http://schemas.datacontract.org/2004/07/MultiFacetedHIS")]
    [System.SerializableAttribute()]
    public partial class OntologyEnvelope : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> OntologyElementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.SiteData> SitesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> OntologyElements {
            get {
                return this.OntologyElementsField;
            }
            set {
                if ((object.ReferenceEquals(this.OntologyElementsField, value) != true)) {
                    this.OntologyElementsField = value;
                    this.RaisePropertyChanged("OntologyElements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.SiteData> Sites {
            get {
                return this.SitesField;
            }
            set {
                if ((object.ReferenceEquals(this.SitesField, value) != true)) {
                    this.SitesField = value;
                    this.RaisePropertyChanged("Sites");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteData", Namespace="http://schemas.datacontract.org/2004/07/MultiFacetedHIS")]
    [System.SerializableAttribute()]
    public partial class SiteData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double longitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeriesCatalogRecord", Namespace="http://schemas.datacontract.org/2004/07/MultiFacetedHIS")]
    [System.SerializableAttribute()]
    public partial class SeriesCatalogRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeriesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeriesID {
            get {
                return this.SeriesIDField;
            }
            set {
                if ((this.SeriesIDField.Equals(value) != true)) {
                    this.SeriesIDField = value;
                    this.RaisePropertyChanged("SeriesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServCode {
            get {
                return this.ServCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServCodeField, value) != true)) {
                    this.ServCodeField = value;
                    this.RaisePropertyChanged("ServCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServURL {
            get {
                return this.ServURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ServURLField, value) != true)) {
                    this.ServURLField = value;
                    this.RaisePropertyChanged("ServURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteID {
            get {
                return this.SiteIDField;
            }
            set {
                if ((this.SiteIDField.Equals(value) != true)) {
                    this.SiteIDField = value;
                    this.RaisePropertyChanged("SiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueCount {
            get {
                return this.ValueCountField;
            }
            set {
                if ((this.ValueCountField.Equals(value) != true)) {
                    this.ValueCountField = value;
                    this.RaisePropertyChanged("ValueCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarCode {
            get {
                return this.VarCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VarCodeField, value) != true)) {
                    this.VarCodeField = value;
                    this.RaisePropertyChanged("VarCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectionDensityReport", Namespace="http://schemas.datacontract.org/2004/07/MultiFacetedHIS")]
    [System.SerializableAttribute()]
    public partial class SelectionDensityReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BeginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChoiceCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> FacetSelectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> FacetSelectionRootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Layer1OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Layer2OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Layer3OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Layer4OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Layer5OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Layer6OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Layer7OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Layer8OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OntologyCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> RemainingOntologyElementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RootLayerOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeriesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> TopConstraintDimensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> TopConstraintSelectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ValueCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginTime {
            get {
                return this.BeginTimeField;
            }
            set {
                if ((this.BeginTimeField.Equals(value) != true)) {
                    this.BeginTimeField = value;
                    this.RaisePropertyChanged("BeginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChoiceCount {
            get {
                return this.ChoiceCountField;
            }
            set {
                if ((this.ChoiceCountField.Equals(value) != true)) {
                    this.ChoiceCountField = value;
                    this.RaisePropertyChanged("ChoiceCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> FacetSelection {
            get {
                return this.FacetSelectionField;
            }
            set {
                if ((object.ReferenceEquals(this.FacetSelectionField, value) != true)) {
                    this.FacetSelectionField = value;
                    this.RaisePropertyChanged("FacetSelection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> FacetSelectionRoot {
            get {
                return this.FacetSelectionRootField;
            }
            set {
                if ((object.ReferenceEquals(this.FacetSelectionRootField, value) != true)) {
                    this.FacetSelectionRootField = value;
                    this.RaisePropertyChanged("FacetSelectionRoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Layer1Options {
            get {
                return this.Layer1OptionsField;
            }
            set {
                if ((this.Layer1OptionsField.Equals(value) != true)) {
                    this.Layer1OptionsField = value;
                    this.RaisePropertyChanged("Layer1Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Layer2Options {
            get {
                return this.Layer2OptionsField;
            }
            set {
                if ((this.Layer2OptionsField.Equals(value) != true)) {
                    this.Layer2OptionsField = value;
                    this.RaisePropertyChanged("Layer2Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Layer3Options {
            get {
                return this.Layer3OptionsField;
            }
            set {
                if ((this.Layer3OptionsField.Equals(value) != true)) {
                    this.Layer3OptionsField = value;
                    this.RaisePropertyChanged("Layer3Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Layer4Options {
            get {
                return this.Layer4OptionsField;
            }
            set {
                if ((this.Layer4OptionsField.Equals(value) != true)) {
                    this.Layer4OptionsField = value;
                    this.RaisePropertyChanged("Layer4Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Layer5Options {
            get {
                return this.Layer5OptionsField;
            }
            set {
                if ((this.Layer5OptionsField.Equals(value) != true)) {
                    this.Layer5OptionsField = value;
                    this.RaisePropertyChanged("Layer5Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Layer6Options {
            get {
                return this.Layer6OptionsField;
            }
            set {
                if ((this.Layer6OptionsField.Equals(value) != true)) {
                    this.Layer6OptionsField = value;
                    this.RaisePropertyChanged("Layer6Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Layer7Options {
            get {
                return this.Layer7OptionsField;
            }
            set {
                if ((this.Layer7OptionsField.Equals(value) != true)) {
                    this.Layer7OptionsField = value;
                    this.RaisePropertyChanged("Layer7Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Layer8Options {
            get {
                return this.Layer8OptionsField;
            }
            set {
                if ((this.Layer8OptionsField.Equals(value) != true)) {
                    this.Layer8OptionsField = value;
                    this.RaisePropertyChanged("Layer8Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxX {
            get {
                return this.MaxXField;
            }
            set {
                if ((this.MaxXField.Equals(value) != true)) {
                    this.MaxXField = value;
                    this.RaisePropertyChanged("MaxX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxY {
            get {
                return this.MaxYField;
            }
            set {
                if ((this.MaxYField.Equals(value) != true)) {
                    this.MaxYField = value;
                    this.RaisePropertyChanged("MaxY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinX {
            get {
                return this.MinXField;
            }
            set {
                if ((this.MinXField.Equals(value) != true)) {
                    this.MinXField = value;
                    this.RaisePropertyChanged("MinX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinY {
            get {
                return this.MinYField;
            }
            set {
                if ((this.MinYField.Equals(value) != true)) {
                    this.MinYField = value;
                    this.RaisePropertyChanged("MinY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OntologyCount {
            get {
                return this.OntologyCountField;
            }
            set {
                if ((this.OntologyCountField.Equals(value) != true)) {
                    this.OntologyCountField = value;
                    this.RaisePropertyChanged("OntologyCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> RemainingOntologyElements {
            get {
                return this.RemainingOntologyElementsField;
            }
            set {
                if ((object.ReferenceEquals(this.RemainingOntologyElementsField, value) != true)) {
                    this.RemainingOntologyElementsField = value;
                    this.RaisePropertyChanged("RemainingOntologyElements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RootLayerOptions {
            get {
                return this.RootLayerOptionsField;
            }
            set {
                if ((this.RootLayerOptionsField.Equals(value) != true)) {
                    this.RootLayerOptionsField = value;
                    this.RaisePropertyChanged("RootLayerOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeriesCount {
            get {
                return this.SeriesCountField;
            }
            set {
                if ((this.SeriesCountField.Equals(value) != true)) {
                    this.SeriesCountField = value;
                    this.RaisePropertyChanged("SeriesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> TopConstraintDimensions {
            get {
                return this.TopConstraintDimensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TopConstraintDimensionsField, value) != true)) {
                    this.TopConstraintDimensionsField = value;
                    this.RaisePropertyChanged("TopConstraintDimensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> TopConstraintSelection {
            get {
                return this.TopConstraintSelectionField;
            }
            set {
                if ((object.ReferenceEquals(this.TopConstraintSelectionField, value) != true)) {
                    this.TopConstraintSelectionField = value;
                    this.RaisePropertyChanged("TopConstraintSelection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ValueCount {
            get {
                return this.ValueCountField;
            }
            set {
                if ((this.ValueCountField.Equals(value) != true)) {
                    this.ValueCountField = value;
                    this.RaisePropertyChanged("ValueCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CUAHSIFacetedSearch.MultiFacetedHISSvc")]
    public interface MultiFacetedHISSvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MultiFacetedHISSvc/GetAllTypedOntologyElements", ReplyAction="http://tempuri.org/MultiFacetedHISSvc/GetAllTypedOntologyElementsResponse")]
        System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> GetAllTypedOntologyElements();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MultiFacetedHISSvc/GetTypedOntologyElementsGivenConstraints", ReplyAction="http://tempuri.org/MultiFacetedHISSvc/GetTypedOntologyElementsGivenConstraintsRes" +
            "ponse")]
        FacetedSearch3.CUAHSIFacetedSearch.OntologyEnvelope GetTypedOntologyElementsGivenConstraints(System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX, bool IncludeSpatialResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MultiFacetedHISSvc/ConductFacetedSearch", ReplyAction="http://tempuri.org/MultiFacetedHISSvc/ConductFacetedSearchResponse")]
        System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.SeriesCatalogRecord> ConductFacetedSearch(System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MultiFacetedHISSvc/GetDensityOfOntologyRoot", ReplyAction="http://tempuri.org/MultiFacetedHISSvc/GetDensityOfOntologyRootResponse")]
        FacetedSearch3.CUAHSIFacetedSearch.SelectionDensityReport GetDensityOfOntologyRoot(System.Collections.Generic.Dictionary<string, FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX, bool IncludeSpatialResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MultiFacetedHISSvc/GetSQLOfNextQuery", ReplyAction="http://tempuri.org/MultiFacetedHISSvc/GetSQLOfNextQueryResponse")]
        string GetSQLOfNextQuery(System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX, bool IncludeSpatialResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MultiFacetedHISSvc/GetSQLOfSearchQuery", ReplyAction="http://tempuri.org/MultiFacetedHISSvc/GetSQLOfSearchQueryResponse")]
        string GetSQLOfSearchQuery(System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX, bool IncludeSpatialResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MultiFacetedHISSvc/GetSQLOfNextDensityQuery", ReplyAction="http://tempuri.org/MultiFacetedHISSvc/GetSQLOfNextDensityQueryResponse")]
        string GetSQLOfNextDensityQuery(System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX, bool IncludeSpatialResults);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MultiFacetedHISSvcChannel : FacetedSearch3.CUAHSIFacetedSearch.MultiFacetedHISSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MultiFacetedHISSvcClient : System.ServiceModel.ClientBase<FacetedSearch3.CUAHSIFacetedSearch.MultiFacetedHISSvc>, FacetedSearch3.CUAHSIFacetedSearch.MultiFacetedHISSvc {
        
        public MultiFacetedHISSvcClient() {
        }
        
        public MultiFacetedHISSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MultiFacetedHISSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultiFacetedHISSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultiFacetedHISSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> GetAllTypedOntologyElements() {
            return base.Channel.GetAllTypedOntologyElements();
        }
        
        public FacetedSearch3.CUAHSIFacetedSearch.OntologyEnvelope GetTypedOntologyElementsGivenConstraints(System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX, bool IncludeSpatialResults) {
            return base.Channel.GetTypedOntologyElementsGivenConstraints(Selections, BeginTime, EndTime, MinY, MaxY, MinX, MaxX, IncludeSpatialResults);
        }
        
        public System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.SeriesCatalogRecord> ConductFacetedSearch(System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX) {
            return base.Channel.ConductFacetedSearch(Selections, BeginTime, EndTime, MinY, MaxY, MinX, MaxX);
        }
        
        public FacetedSearch3.CUAHSIFacetedSearch.SelectionDensityReport GetDensityOfOntologyRoot(System.Collections.Generic.Dictionary<string, FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX, bool IncludeSpatialResults) {
            return base.Channel.GetDensityOfOntologyRoot(Selections, BeginTime, EndTime, MinY, MaxY, MinX, MaxX, IncludeSpatialResults);
        }
        
        public string GetSQLOfNextQuery(System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX, bool IncludeSpatialResults) {
            return base.Channel.GetSQLOfNextQuery(Selections, BeginTime, EndTime, MinY, MaxY, MinX, MaxX, IncludeSpatialResults);
        }
        
        public string GetSQLOfSearchQuery(System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX, bool IncludeSpatialResults) {
            return base.Channel.GetSQLOfSearchQuery(Selections, BeginTime, EndTime, MinY, MaxY, MinX, MaxX, IncludeSpatialResults);
        }
        
        public string GetSQLOfNextDensityQuery(System.Collections.Generic.List<FacetedSearch3.CUAHSIFacetedSearch.OntologyElement> Selections, System.DateTime BeginTime, System.DateTime EndTime, double MinY, double MaxY, double MinX, double MaxX, bool IncludeSpatialResults) {
            return base.Channel.GetSQLOfNextDensityQuery(Selections, BeginTime, EndTime, MinY, MaxY, MinX, MaxX, IncludeSpatialResults);
        }
    }
}
